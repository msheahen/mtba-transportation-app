function getJSON(t){return fetch(t).then(function(t){return t.json()})["catch"](function(t){return t})}function convertUnixTime(t){var e=new Date(1e3*t),n=e.getHours();n>=13?(amPm="PM",n-=12):amPm="AM";var o="0"+e.getMinutes();"0"+e.getSeconds();return n+":"+o.substr(-2)+" "+amPm}function displayMessage(t,e){"error"==t?toastr.error(e):"warning"==t?toastr.warning(e):toastr.info(e)}function createTripCard(t,e,n){var o=t.trip_id,r=(t.trip_name,!1),i=!1,a=!1,s=!1,c=new Date;c=c.getTime()/1e3;var d="<div class='prediction onTime'> ON TIME</div>";if(t.stop.forEach(function(t){t.stop_id==e&&(r=t),t.stop_id==n&&(i=t)}),!r||!i)return 0;var p=(i.sch_arr_dt-r.sch_arr_dt)/60,l="http://realtime.mbta.com/developer/api/v2/predictionsbytrip?api_key="+apikey+"&trip="+o+"&format=json";getJSON(l).then(function(t){if(!t.error&&(t.stop.forEach(function(t){console.log(t),t.stop_id==e&&(a=t),t.stop_id==n&&(s=t)}),(s.pre_dt-i.sch_arr_dt)/60>=1||(a.pre_dt-r.sch_arr_dt)/60>=1)){console.log((s.pre_dt-i.sch_arr_dt)/60);var o=Math.min(s.pre_dt-i.sch_arr_dt,a.pre_dt-r.sch_arr_dt);d="<div class='prediction late'> DELAYED "+o+" MINUTES</div>"}var c="<div class='card'>"+d+"<div class='duration'>Duration: <b>"+p+" minutes </b></div><br/><div class='depart'>Departs from "+r.stop_name+" at <b>"+convertUnixTime(r.sch_arr_dt)+"</b></div><a class='stops-link'>"+(i.stop_sequence-r.stop_sequence-1)+" stops in between</a><div class='arrive'>Arrives in "+i.stop_name+" at <b>"+convertUnixTime(i.sch_arr_dt)+"</b></div></div>";$("#trip-options").append(c)})["catch"](function(t){displayMessage("error",t)})}function IndexController(){this._dbPromise=this._setupDB(),this._registerServiceWorker(),this.showDefaultJourney()}var apikey="wX9NwuHnZU2ToO7GmGR9uw";IndexController.prototype._setupDB=function(){return navigator.serviceWorker?idb.open("mtba-trans",2,function(t){}):Promise.resolve()},IndexController.prototype._registerServiceWorker=function(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("./service-worker.js",{scope:"./"}).then(function(t){if(t.waiting)return void console.log("service worker waiting")})["catch"](function(t){console.log("Service Worker Failed to Register",t)}),navigator.serviceWorker.addEventListener("controllerchange",function(){}))},IndexController.prototype.showDefaultJourney=function(){this._dbPromise.then(function(t){return t.transaction.objectStore("store"),store.getAll()}).then(function(t){return 0==t.length?Promise.reject():void console.log("can't connect")})};var Controller=new IndexController;$(document).ready(function(){getJSON("./assets/data/routes.json").then(function(t){var e="<option>---</option>";return t.mode.forEach(function(t){e+="<option disabled>--"+t.mode_name+"--</option>",t.route.forEach(function(t){e+="<option value='"+t.route_id+"'>"+t.route_name+"</option>"})}),e}).then(function(t){$("#train-line").html(t)})["catch"](function(t){console.log(t)}),$("#train-line").change(function(){getJSON("./assets/data/"+this.value+".json").then(function(t){var e="<option value='none' selected>--</option>";return t.direction[0].stop.forEach(function(t){e+="<option value='"+t.stop_id+"'>"+t.stop_name+"</option>"}),e}).then(function(t){$("#departing-stop").html(t),$("#destination-stop").html(t),$("#station-selection").removeClass("hidden")})["catch"](function(t){console.log(t)})}),$("#destination-stop").change(function(){"none"!=this.value&&"none"!=$("#departing-stop").value?$("#findTrain").prop("disabled",!1):$("#findTrain").prop("disabled",!0)}),$("#departing-stop").change(function(){"none"!=this.value&&"none"!=$("#destination-stop").value?$("#findTrain").prop("disabled",!1):$("#findTrain").prop("disabled",!0)}),$("#findTrain").click(function(t){var e=$("#train-line").val(),n=$("#departing-stop").val(),o=$("#destination-stop").val(),r="schedulebyroute";$("#load").css({display:"block"}),$("#trip-options").html("");var i;i=$("#departing-stop").prop("selectedIndex")<$("#destination-stop").prop("selectedIndex")?0:1;var a="&route="+e+"&max_trips=100&max_time=1440&direction="+i,s="http://realtime.mbta.com/developer/api/v2/"+r+"?api_key="+apikey+a+"&format=json";getJSON(s).then(function(t){return console.log(t),t.direction[0].trip})["catch"](function(t){displayMessage("error",t),$("#load").css({display:"none"})}).then(function(t){$("#trip-options").html(" "),$("#load").css({display:"none"}),t.forEach(function(t){createTripCard(t,n,o)})})["catch"](function(t){displayMessage("error","Sorry, no trips with those parameters at this time."),$("#load").css({display:"none"})})})});